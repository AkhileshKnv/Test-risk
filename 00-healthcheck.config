# Sample .ebextensions/00-healthcheck.config
# This is a real-world example for a typical web application

option_settings:
  # Enhanced health reporting (recommended for production)
  aws:elasticbeanstalk:healthreporting:system:
    SystemType: enhanced
    HealthCheckSuccessThreshold: Ok
    EnhancedHealthAuthEnabled: true
  
  # Application-level health check endpoint
  aws:elasticbeanstalk:application:
    Application Healthcheck URL: /healthz.php
  
  # Load Balancer health check configuration
  aws:elb:healthcheck:
    HealthyThreshold: 3
    Interval: 30
    Timeout: 5
    UnhealthyThreshold: 5
    Target: HTTP:80/healthz.php
  
  # Auto Scaling health check settings
  aws:autoscaling:asg:
    HealthCheckType: ELB
    HealthCheckGracePeriod: 300
  
  # Environment configuration
  aws:elasticbeanstalk:environment:
    LoadBalancerType: application
  
  # Application Load Balancer settings (if using ALB)
  aws:elbv2:loadbalancer:
    IdleTimeout: 60
  
  # Instance configuration
  aws:ec2:instances:
    InstanceTypes: t2.micro, t3.micro, t3.small
    EnableSpot: false
    SecurityGroups: sg-0012075f3d693ee7b
  
  # Load Balancer Security Group
  aws:elbv2:loadbalancer:
    SecurityGroups: sg-09a06150ab91b80d6
  
  # VPC Configuration (if using custom VPC)
  aws:ec2:vpc:
    VPCId: vpc-05191537332b7d9ad
    Subnets: subnet-02afe3432180b2761,subnet-0774b7276091cb969
    ELBSubnets: subnet-0bd4a40109de9c55c,subnet-0df36b6199214841f
    ELBScheme: internet-facing
    AssociatePublicIpAddress: true

# Optional: Files section removed since you already have healthz.php
# The existing healthz.php in your application bundle will be used

# Commands to run during deployment (before application deployment)
commands:
  01_update_system:
    command: "yum update -y"
    ignoreErrors: true
  
  02_install_dependencies:
    command: "yum install -y htop"
    ignoreErrors: true

# Container commands (run after application deployment)
container_commands:
  01_restart_apache:
    command: "sudo service httpd restart"
    ignoreErrors: true
    leader_only: false

# Optional: Resources section for custom CloudFormation resources
# Resources:
#   AWSEBAutoScalingGroup:
#     Type: AWS::AutoScaling::AutoScalingGroup
